/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_CIA_SUBPUB_ABSTRACT_PUBLISH_SERVER_H_
#define JSONRPC_CPP_STUB_CIA_SUBPUB_ABSTRACT_PUBLISH_SERVER_H_

#include <jsonrpccpp/server.h>

namespace cia_subpub {
    class abstract_publish_server : public jsonrpc::AbstractServer<abstract_publish_server>
    {
        public:
            abstract_publish_server(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<abstract_publish_server>(conn, type)
            {
                this->bindAndAddNotification(jsonrpc::Procedure("publish", jsonrpc::PARAMS_BY_NAME, "channel",jsonrpc::JSON_STRING,"event_id",jsonrpc::JSON_INTEGER, NULL), &cia_subpub::abstract_publish_server::publishI);
            }

            inline virtual void publishI(const Json::Value &request)
            {
                this->publish(request["channel"].asString(), request["event_id"].asInt());
            }
            virtual void publish(const std::string& channel, int event_id) = 0;
    };

}
#endif //JSONRPC_CPP_STUB_CIA_SUBPUB_ABSTRACT_PUBLISH_SERVER_H_
